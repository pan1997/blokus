// Code generated by jtd-codegen for TypeScript v0.2.1

export interface GamePlayer {
  color: Color;
  score: number;
  user: User;
}

export enum GameStatus {
  Ended = "ENDED",
  Ongoing = "ONGOING",
  WaitingForPlayers = "WAITING_FOR_PLAYERS",
}

export interface Game {
  id: string;
  players: GamePlayer[];
  status: GameStatus;
  board?: Board;
}

export interface BoardRemainingTiles {
  color: Color;
  tiles: Tile[];
}

export interface BoardScore {
  color: Color;
  score: number;
}

export interface Board {
  over: boolean;
  remaining_tiles: BoardRemainingTiles;
  score: BoardScore;
  table: (Color | null)[][];
  color_to_move?: Color;
}

export enum Color {
  C1 = "C1",
  C2 = "C2",
  C3 = "C3",
  C4 = "C4",
}

export enum Tile {
  T1 = "T1",
  T2 = "T2",
  T3 = "T3",
  T4 = "T4",
  T5 = "T5",
  T6 = "T6",
}

export interface User {
  id: string;
  name: string;
}
